/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms;

import FormPacijent.FormNoviPacijent;
import FormPacijent.FormPretragaPacijenta;
import FormTermin.FormPretragaTermina;
import controller.ClientController;
import domain.Doktor;
import domain.Pacijent;
import domain.StavkaTermina;
import domain.Termin;
import domain.Usluga;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import models.TableModelStavkeTermina;
import session.Session;

/**
 *
 * @author PC
 */
public class MainForm extends javax.swing.JFrame {

    Doktor d;

    /**
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();
        setLocationRelativeTo(null);
        this.d = Session.getInstance().getUlogovani();
        lblUlogovaniDoktor.setText("" + d);
        setTitle("Glavna forma");
        srediFormu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblLog = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        lblPosebnaCena = new javax.swing.JLabel();
        btnObrisi = new javax.swing.JButton();
        btnDodaj = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStavkeTermina = new javax.swing.JTable();
        cmbUsluga = new javax.swing.JComboBox();
        txtPosebnaCena = new javax.swing.JFormattedTextField();
        btnZakazi = new javax.swing.JButton();
        cmbPacijent = new javax.swing.JComboBox();
        cmbDoktor = new javax.swing.JComboBox();
        txtDatumVreme = new javax.swing.JFormattedTextField();
        txtCenaTermina = new javax.swing.JFormattedTextField();
        lblObjasnjenje = new javax.swing.JLabel();
        lblUlogovaniDoktor = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu6 = new javax.swing.JMenu();
        jMenuNoviPacijent = new javax.swing.JMenuItem();
        jMenuPretragaPacijenata = new javax.swing.JMenuItem();
        jMenu8 = new javax.swing.JMenu();
        miPretragaTermina = new javax.swing.JMenuItem();
        jMenu7 = new javax.swing.JMenu();
        miLogout = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuDodaj = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblLog.setForeground(new java.awt.Color(255, 102, 102));
        lblLog.setText("Ulogovani doktor:");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Unos termina"));

        jLabel1.setText("Pacijent:");

        jLabel2.setText("Doktor:");

        jLabel3.setText("Datum i vreme:");

        jLabel4.setText("Ukupna cena termina:");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Unos usluga termina"));

        jLabel5.setText("Usluga:");

        lblPosebnaCena.setText("Posebna cena (u slucaju izmena):");

        btnObrisi.setBackground(new java.awt.Color(255, 102, 102));
        btnObrisi.setText("Obrisi uslugu");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        btnDodaj.setBackground(new java.awt.Color(102, 102, 255));
        btnDodaj.setText("Dodaj uslugu");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        tblStavkeTermina.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblStavkeTermina);

        cmbUsluga.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbUsluga.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbUslugaItemStateChanged(evt);
            }
        });

        txtPosebnaCena.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 462, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnObrisi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(btnDodaj, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lblPosebnaCena)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtPosebnaCena))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(cmbUsluga, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cmbUsluga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPosebnaCena)
                    .addComponent(txtPosebnaCena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnObrisi)
                    .addComponent(btnDodaj))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );

        btnZakazi.setBackground(new java.awt.Color(102, 102, 255));
        btnZakazi.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        btnZakazi.setText("Zakazi termin");
        btnZakazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnZakaziActionPerformed(evt);
            }
        });

        cmbPacijent.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbDoktor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        txtDatumVreme.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd.MM.yyyy HH:mm"))));
        txtDatumVreme.setText("20.05.2022 12:00");

        txtCenaTermina.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));

        lblObjasnjenje.setFont(new java.awt.Font("sansserif", 3, 12)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(51, 51, 51)
                                .addComponent(cmbPacijent, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(59, 59, 59)
                                .addComponent(cmbDoktor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDatumVreme)
                                    .addComponent(txtCenaTermina))))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnZakazi, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(121, 121, 121))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblObjasnjenje)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbPacijent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbDoktor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(lblObjasnjenje)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtDatumVreme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtCenaTermina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnZakazi, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                .addContainerGap())
        );

        lblUlogovaniDoktor.setFont(new java.awt.Font("Tahoma", 3, 13)); // NOI18N

        jMenu6.setText("Pacijent");

        jMenuNoviPacijent.setText("Novi pacijent");
        jMenuNoviPacijent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuNoviPacijentActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuNoviPacijent);

        jMenuPretragaPacijenata.setText("Pretraga pacijenta");
        jMenuPretragaPacijenata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuPretragaPacijenataActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuPretragaPacijenata);

        jMenuBar1.add(jMenu6);

        jMenu8.setText("Termin");

        miPretragaTermina.setText("Pretraga termina");
        miPretragaTermina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miPretragaTerminaActionPerformed(evt);
            }
        });
        jMenu8.add(miPretragaTermina);

        jMenuBar1.add(jMenu8);

        jMenu7.setText("Logout");

        miLogout.setText("Odjavi se");
        miLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miLogoutActionPerformed(evt);
            }
        });
        jMenu7.add(miLogout);

        jMenuBar1.add(jMenu7);

        jMenu1.setText("Registruj novog doktora");

        jMenuDodaj.setText("Novi doktor");
        jMenuDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuDodajActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuDodaj);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblLog)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblUlogovaniDoktor, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblLog, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblUlogovaniDoktor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuNoviPacijentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuNoviPacijentActionPerformed
        new FormNoviPacijent(this, true).setVisible(true);
    }//GEN-LAST:event_jMenuNoviPacijentActionPerformed

    private void jMenuPretragaPacijenataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuPretragaPacijenataActionPerformed
        new FormPretragaPacijenta(this, true).setVisible(true);
    }//GEN-LAST:event_jMenuPretragaPacijenataActionPerformed

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed

        Usluga u = (Usluga) cmbUsluga.getSelectedItem();
        
        TableModelStavkeTermina tm = (TableModelStavkeTermina) tblStavkeTermina.getModel();
        if(tm.postojiUsluga(u)){
            //JOptionPane.showMessageDialog(this, "Vec ste uneli tu uslugu za ovaj termin!");
            JOptionPane.showMessageDialog(this, "Vec ste uneli tu uslugu za ovaj termin!", "Greska",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        double cena;
        
        if(txtPosebnaCena.getText().isEmpty()){
            cena = u.getCena();
        }else{
            cena = Double.parseDouble(txtPosebnaCena.getText());
        }
        
        if(cena < 500 || cena > 1000000){
           // JOptionPane.showMessageDialog(this, "Cena usluge mora biti izmedju 2000 i 1000000!");
              JOptionPane.showMessageDialog(this, "Cena usluge mora biti izmedju 500 i 1000000!", "Upozorenje",JOptionPane.WARNING_MESSAGE);

            return;
        }

        StavkaTermina st = new StavkaTermina(null, -1, cena, u);

        tm.dodajStavku(st);

        double cenaTermina = Double.parseDouble(txtCenaTermina.getText());
        txtCenaTermina.setText(String.valueOf(cenaTermina + st.getCenaStavke()));


    }//GEN-LAST:event_btnDodajActionPerformed

    private void cmbUslugaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbUslugaItemStateChanged

        if(cmbUsluga.getSelectedItem() != null){
            txtPosebnaCena.setText("");
        }

    }//GEN-LAST:event_cmbUslugaItemStateChanged

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed

        int row = tblStavkeTermina.getSelectedRow();

        if (row >= 0) {
            TableModelStavkeTermina tm = (TableModelStavkeTermina) tblStavkeTermina.getModel();

            StavkaTermina st = tm.getSelectedStavka(row);

            double cenaTermina = Double.parseDouble(txtCenaTermina.getText());
            txtCenaTermina.setText(String.valueOf(cenaTermina - st.getCenaStavke()));

            tm.obrisiStavku(row);
        }

    }//GEN-LAST:event_btnObrisiActionPerformed

    private void miLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miLogoutActionPerformed
        
        int result = JOptionPane.showConfirmDialog(this, "Da li ste sigurni da zelite da "
                + "izlogujete sa sistema?", "Potvrda", JOptionPane.YES_NO_OPTION);

        if (result == JOptionPane.NO_OPTION) {
            return;
        }

        if (result == JOptionPane.YES_OPTION) {
            new Login().setVisible(true);
            this.dispose();
        }
        
    }//GEN-LAST:event_miLogoutActionPerformed

    private void btnZakaziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnZakaziActionPerformed

        try {
            Pacijent pacijent = (Pacijent) cmbPacijent.getSelectedItem();
            Doktor doktor = (Doktor) cmbDoktor.getSelectedItem();
            
            SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy HH:mm");
            Date datumVreme = sdf.parse(txtDatumVreme.getText());
            
            Calendar cal = Calendar.getInstance();
            cal.setTime(datumVreme);
            //Calendar.getInstance(): return a Calendar instance based on the current time in the default time zone with the default locale.
            //moram preko kaledara da proverim minute, tj hocu da mi se zakazuje samo na ceo sat
            if(cal.get(Calendar.MINUTE) != 0){
                //JOptionPane.showMessageDialog(this, "Termin moze biti zakazan samo na ceo sat!");
                 JOptionPane.showMessageDialog(this, "Termin moze biti zakazan samo na ceo sat!", "Upozorenje",JOptionPane.WARNING_MESSAGE);
                return;
            }
            
            double cenaTermina = Double.parseDouble(txtCenaTermina.getText());
            
            TableModelStavkeTermina tm = (TableModelStavkeTermina) tblStavkeTermina.getModel();
            
            Termin t = new Termin(null, datumVreme, cenaTermina, pacijent, doktor, tm.getLista());
            
            ClientController.getInstance().addTermin(t);
            resetujFormu();
           // JOptionPane.showMessageDialog(this, "Uspesno ste zakazali termin.");
            JOptionPane.showMessageDialog(this, "Uspesno ste zakazali termin.", "Potvrda",JOptionPane.INFORMATION_MESSAGE);
            
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        

    }//GEN-LAST:event_btnZakaziActionPerformed

    private void miPretragaTerminaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miPretragaTerminaActionPerformed
        new FormPretragaTermina(this, true).setVisible(true);
    }//GEN-LAST:event_miPretragaTerminaActionPerformed

    private void jMenuDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuDodajActionPerformed
        new FormNoviDoktor(this, true).setVisible(true);
    }//GEN-LAST:event_jMenuDodajActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnZakazi;
    private javax.swing.JComboBox cmbDoktor;
    private javax.swing.JComboBox cmbPacijent;
    private javax.swing.JComboBox cmbUsluga;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuDodaj;
    private javax.swing.JMenuItem jMenuNoviPacijent;
    private javax.swing.JMenuItem jMenuPretragaPacijenata;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblLog;
    private javax.swing.JLabel lblObjasnjenje;
    private javax.swing.JLabel lblPosebnaCena;
    private javax.swing.JLabel lblUlogovaniDoktor;
    private javax.swing.JMenuItem miLogout;
    private javax.swing.JMenuItem miPretragaTermina;
    private javax.swing.JTable tblStavkeTermina;
    private javax.swing.JFormattedTextField txtCenaTermina;
    private javax.swing.JFormattedTextField txtDatumVreme;
    private javax.swing.JFormattedTextField txtPosebnaCena;
    // End of variables declaration//GEN-END:variables

    private void srediFormu() {
        popuniPacijente();
        popuniDoktore();
        popuniUsluge();
        txtCenaTermina.setText("0.00");
        txtCenaTermina.setEnabled(false);
        tblStavkeTermina.setModel(new TableModelStavkeTermina());
        lblObjasnjenje.setText("Termin moze biti zakazan samo na ceo sat!");
    }

    public void popuniPacijente() {
        try {
            ArrayList<Pacijent> pacijenti = ClientController.getInstance().getAllPacijent();

            cmbPacijent.removeAllItems();

            for (Pacijent pacijent : pacijenti) {
                cmbPacijent.addItem(pacijent);
            }

        } catch (Exception ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void popuniDoktore() {
        try {
            ArrayList<Doktor> doktori = ClientController.getInstance().getAllDoktor();

            cmbDoktor.removeAllItems();

            for (Doktor doktor : doktori) {
                cmbDoktor.addItem(doktor);
            }

        } catch (Exception ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void popuniUsluge() {
        try {
            ArrayList<Usluga> usluge = ClientController.getInstance().getAllUsluga();

            cmbUsluga.removeAllItems();

            for (Usluga usluga : usluge) {
                cmbUsluga.addItem(usluga);
            }

        } catch (Exception ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void resetujFormu() {
        txtCenaTermina.setText("0.00");
        TableModelStavkeTermina tm = (TableModelStavkeTermina) tblStavkeTermina.getModel();
        tm.isprazniTabelu();
        txtPosebnaCena.setText("");
    }

}
